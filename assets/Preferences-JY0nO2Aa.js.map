{"version":3,"file":"Preferences-JY0nO2Aa.js","sources":["../../src/stores/user-store.ts","../../src/pages/preferences/preferences-header/PreferencesHeader.vue","../../src/pages/preferences/styles.ts","../../src/pages/preferences/settings/Settings.vue","../../src/pages/preferences/modals/EditNameModal.vue","../../src/pages/preferences/modals/ResetPasswordModal.vue","../../src/pages/preferences/Preferences.vue"],"sourcesContent":["import { defineStore } from 'pinia'\nimport axios from '@/services/axios'\nimport api from '@/services/api'\n\nexport interface User {\n  id: number\n  phone: string\n  full_name?: string\n  role: 'admin' | 'commission' | 'applicant'\n  is_active: boolean\n}\n\nexport const useUsersStore = defineStore('users', {\n  state: () => ({\n    items: [] as User[],\n    isLoading: false,\n  }),\n\n  actions: {\n    async fetchUsers() {\n      this.isLoading = true\n      try {\n        const res = await axios.get(api.users())\n        this.items = res.data.results || res.data\n      } catch (e) {\n        console.error('Foydalanuvchilarni olishda xatolik:', e)\n      } finally {\n        this.isLoading = false\n      }\n    },\n\n    async addUser(user: Partial<User>) {\n      const res = await axios.post(api.users(), user)\n      this.items.unshift(res.data)\n    },\n\n    async updateUser(id: number, user: Partial<User>) {\n      const res = await axios.put(api.user(id), user)\n      const index = this.items.findIndex((u) => u.id === id)\n      if (index !== -1) this.items.splice(index, 1, res.data)\n    },\n\n    async deleteUser(id: number) {\n      await axios.delete(api.user(id))\n      this.items = this.items.filter((u) => u.id !== id)\n    },\n  },\n})\n","<template>\n  <VaAvatar size=\"large\" color=\"warning\"><span class=\"text-4xl\"> üòç </span></VaAvatar>\n  <div class=\"flex flex-col justify-center\">\n    <h2 class=\"text-[28px] md:text-[32px] leading-10 font-bold\">{{ store.userName }}</h2>\n    <div class=\"flex space-x-1 text-[13px] leading-4\">\n      <p>Member since</p>\n      <p>{{ store.memberSince }}</p>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport { useUsersStore } from '../../../stores/user-store'\n\nconst store = useUsersStore()\n</script>\n","export const buttonStyles = {\n  '--va-button-font-size': '14px',\n  '--va-button-line-height': '20px',\n}\n","<template>\n  <div class=\"flex flex-col md:flex-row md:items-center space-y-2 md:space-y-0 md:space-x-6 min-h-[36px] leading-5\">\n    <p class=\"font-bold w-[200px]\">Name</p>\n    <div class=\"flex-1\">\n      <div class=\"max-w-[748px]\">\n        {{ store.userName }}\n      </div>\n    </div>\n    <VaButton :style=\"buttonStyles\" class=\"w-fit h-fit\" preset=\"primary\" @click=\"emits('openNameModal')\">\n      Edit\n    </VaButton>\n  </div>\n  <VaDivider />\n  <div class=\"flex flex-col md:flex-row space-y-2 md:space-y-0 md:space-x-6 min-h-[36px] leading-5\">\n    <p class=\"font-bold w-[200px]\">Email</p>\n    <div class=\"flex-1\">\n      <div class=\"max-w-[748px]\">\n        {{ store.email }}\n      </div>\n    </div>\n  </div>\n  <div class=\"flex flex-col md:flex-row space-y-2 md:space-y-0 md:space-x-6 min-h-[36px] leading-5\">\n    <p class=\"font-bold w-[200px]\">Password</p>\n    <div class=\"flex-1\">\n      <div class=\"max-w-[748px]\">‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢</div>\n    </div>\n    <VaButton :style=\"buttonStyles\" class=\"w-fit h-fit\" preset=\"primary\" @click=\"emits('openResetPasswordModal')\">\n      Reset Password\n    </VaButton>\n  </div>\n  <VaDivider />\n  <div class=\"flex flex-col md:flex-row space-y-2 md:space-y-0 md:space-x-6 min-h-[36px] leading-5\">\n    <p class=\"font-bold w-[200px]\">Two-factor authentication</p>\n    <div class=\"flex-1\">\n      <div class=\"max-w-[748px]\">\n        {{ twoFA.content }}\n      </div>\n    </div>\n    <VaButton :style=\"buttonStyles\" class=\"w-fit h-fit\" preset=\"primary\" :color=\"twoFA.color\" @click=\"toggle2FA\">\n      {{ twoFA.button }}\n    </VaButton>\n  </div>\n  <VaDivider />\n  <div class=\"flex flex-col md:flex-row space-y-2 md:space-y-0 md:space-x-6 min-h-[36px] leading-5\">\n    <p class=\"font-bold w-[200px]\">Email subscriptions</p>\n    <div class=\"flex-1\">\n      <div class=\"max-w-[748px]\">\n        <p>To manage what emails you get, visit the</p>\n        <div class=\"flex space-x-1 w-fit\">\n          <RouterLink :to=\"{ name: 'settings' }\" class=\"font-semibold text-primary\">Notification settings</RouterLink>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\n\nimport { useToast } from 'vuestic-ui'\n\nimport { useUsersStore } from '../../../stores/user-store'\n\nimport { buttonStyles } from '../styles'\n\nconst store = useUsersStore()\n\nconst { init } = useToast()\n\nconst toastMessage = computed(() => (store.is2FAEnabled ? '2FA successfully enabled' : '2FA successfully disabled'))\n\nconst twoFA = computed(() => {\n  if (store.is2FAEnabled) {\n    return {\n      color: 'danger',\n      button: 'Disable 2FA',\n      content:\n        'Two-Factor Authentication (2FA) is now enabled for your account, adding an extra layer of security to your sign-ins.',\n    }\n  } else {\n    return {\n      color: 'primary',\n      button: 'Set up 2FA',\n      content:\n        'Add an extra layer of security to your account. To sign in, you‚Äôll need to provide a code along with your username and password.',\n    }\n  }\n})\n\nconst toggle2FA = () => {\n  store.toggle2FA()\n  init({ message: toastMessage.value, color: 'success' })\n}\n\nconst emits = defineEmits(['openNameModal', 'openResetPasswordModal'])\n</script>\n","<template>\n  <VaModal\n    :mobile-fullscreen=\"false\"\n    size=\"small\"\n    hide-default-actions\n    max-width=\"380px\"\n    model-value\n    close-button\n    @update:modelValue=\"emits('cancel')\"\n  >\n    <h1 class=\"va-h5 mb-4\">Reset password</h1>\n    <VaForm ref=\"form\" @submit.prevent=\"submit\">\n      <VaInput v-model=\"Name\" class=\"mb-4\" label=\"Name\" placeholder=\"Name\" />\n      <div class=\"flex flex-col-reverse md:flex-row md:items-center md:justify-end md:space-x-4\">\n        <VaButton :style=\"buttonStyles\" preset=\"secondary\" color=\"secondary\" @click=\"emits('cancel')\"> Cancel</VaButton>\n        <VaButton :style=\"buttonStyles\" class=\"mb-4 md:mb-0\" type=\"submit\" @click=\"submit\"> Save</VaButton>\n      </div>\n    </VaForm>\n  </VaModal>\n</template>\n<script lang=\"ts\" setup>\nimport { ref } from 'vue'\nimport { useUsersStore } from '../../../stores/user-store'\n\nimport { buttonStyles } from '../styles'\nimport { useToast } from 'vuestic-ui'\n\nconst store = useUsersStore()\n\nconst { init } = useToast()\n\nconst emits = defineEmits(['cancel'])\n\nconst Name = ref<string>(store.userName)\n\nconst submit = () => {\n  if (!Name.value || Name.value === store.userName) {\n    return emits('cancel')\n  }\n\n  store.changeUserName(Name.value)\n  init({ message: \"You've successfully changed your name\", color: 'success' })\n  emits('cancel')\n}\n</script>\n\n<style lang=\"scss\">\n// TODO temporary before https://github.com/epicmaxco/vuestic-ui/issues/4020 fix\n.va-modal__inner {\n  min-width: 326px;\n}\n</style>\n","<template>\n  <VaModal\n    max-width=\"530px\"\n    :mobile-fullscreen=\"false\"\n    hide-default-actions\n    model-value\n    close-button\n    @update:modelValue=\"emits('cancel')\"\n  >\n    <h1 class=\"va-h5 mb-4\">Reset password</h1>\n    <VaForm ref=\"form\" class=\"space-y-6\" @submit.prevent=\"submit\">\n      <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <VaInput\n          v-model=\"oldPassowrd\"\n          :rules=\"oldPasswordRules\"\n          label=\"Old password\"\n          placeholder=\"Old password\"\n          required-mark\n          type=\"password\"\n        />\n        <div class=\"hidden md:block\" />\n        <VaInput\n          v-model=\"newPassword\"\n          :rules=\"newPasswordRules\"\n          label=\"New password\"\n          placeholder=\"New password\"\n          required-mark\n          type=\"password\"\n        />\n        <VaInput\n          v-model=\"repeatNewPassword\"\n          :rules=\"repeatNewPasswordRules\"\n          label=\"Repeat new password\"\n          placeholder=\"Repeat new password\"\n          required-mark\n          type=\"password\"\n        />\n      </div>\n      <div class=\"flex flex-col space-y-2\">\n        <div class=\"flex space-x-2 items-center\">\n          <div>\n            <VaIcon :name=\"newPassword?.length! >= 8 ? 'mso-check' : 'mso-close'\" color=\"secondary\" size=\"20px\" />\n          </div>\n          <p>Must be at least 8 characters long</p>\n        </div>\n        <div class=\"flex space-x-2 items-center\">\n          <div>\n            <VaIcon :name=\"new Set(newPassword).size >= 6 ? 'mso-check' : 'mso-close'\" color=\"secondary\" size=\"20px\" />\n          </div>\n          <p>Must contain at least 6 unique characters</p>\n        </div>\n      </div>\n      <div class=\"flex flex-col-reverse md:justify-end md:flex-row md:space-x-4\">\n        <VaButton :style=\"buttonStyles\" preset=\"secondary\" color=\"secondary\" @click=\"emits('cancel')\"> Cancel</VaButton>\n        <VaButton :style=\"buttonStyles\" class=\"mb-4 md:mb-0\" type=\"submit\" @click=\"submit\"> Update Password</VaButton>\n      </div>\n    </VaForm>\n  </VaModal>\n</template>\n<script lang=\"ts\" setup>\nimport { ref } from 'vue'\nimport { useForm, useToast } from 'vuestic-ui'\n\nimport { buttonStyles } from '../styles'\n\nconst oldPassowrd = ref<string>()\nconst newPassword = ref<string>()\nconst repeatNewPassword = ref<string>()\n\nconst { validate } = useForm('form')\nconst { init } = useToast()\n\nconst emits = defineEmits(['cancel'])\n\nconst submit = () => {\n  if (validate()) {\n    init({ message: \"You've successfully changed your password\", color: 'success' })\n    emits('cancel')\n  }\n}\n\nconst oldPasswordRules = [(v: string) => !!v || 'Old password field is required']\n\nconst newPasswordRules = [\n  (v: string) => !!v || 'New password field is required',\n  (v: string) => v?.length >= 8 || 'Must be at least 8 characters long',\n  (v: string) => new Set(v).size >= 6 || 'Must contain at least 6 unique characters',\n  (v: string) => v !== oldPassowrd.value || 'New password cannot be the same',\n]\n\nconst repeatNewPasswordRules = [\n  (v: string) => !!v || 'Repeat new password field is required',\n  (v: string) => v === newPassword.value || 'Confirm password does not match new password',\n]\n</script>\n\n<style lang=\"scss\">\n// TODO temporary before https://github.com/epicmaxco/vuestic-ui/issues/4020 fix\n.va-modal__inner {\n  min-width: 326px;\n}\n</style>\n","<template>\n  <h1 class=\"page-title\">Foydalanuvchi Profili</h1>\n  <div class=\"flex flex-col p-4 space-y-10 bg-backgroundSecondary rounded-lg\">\n    <div class=\"flex space-x-5\">\n      <PreferencesHeader />\n    </div>\n    <div class=\"space-y-4 md:space-y-6\">\n      <Settings @openNameModal=\"isEditNameModalOpen = true\" @openResetPasswordModal=\"isResetPasswordModalOpen = true\" />\n    </div>\n  </div>\n  <EditNameModal v-if=\"isEditNameModalOpen\" @cancel=\"isEditNameModalOpen = false\" />\n  <ResetPasswordModal v-if=\"isResetPasswordModalOpen\" @cancel=\"isResetPasswordModalOpen = false\" />\n</template>\n<script lang=\"ts\" setup>\nimport { ref } from 'vue'\n\nimport PreferencesHeader from './preferences-header/PreferencesHeader.vue'\nimport Settings from './settings/Settings.vue'\nimport EditNameModal from './modals/EditNameModal.vue'\nimport ResetPasswordModal from './modals/ResetPasswordModal.vue'\n\nconst isEditNameModalOpen = ref(false)\nconst isResetPasswordModalOpen = ref(false)\n</script>\n"],"names":["useUsersStore","defineStore","res","axios","api","e","user","id","index","u","store","buttonStyles","init","useToast","toastMessage","computed","twoFA","toggle2FA","emits","__emit","Name","ref","submit","oldPassowrd","newPassword","repeatNewPassword","validate","useForm","oldPasswordRules","v","newPasswordRules","repeatNewPasswordRules","isEditNameModalOpen","isResetPasswordModalOpen"],"mappings":"kQAYa,MAAAA,EAAgBC,EAAY,QAAS,CAChD,MAAO,KAAO,CACZ,MAAO,CAAC,EACR,UAAW,EAAA,GAGb,QAAS,CACP,MAAM,YAAa,CACjB,KAAK,UAAY,GACb,GAAA,CACF,MAAMC,EAAM,MAAMC,EAAM,IAAIC,EAAI,OAAO,EACvC,KAAK,MAAQF,EAAI,KAAK,SAAWA,EAAI,WAC9BG,EAAG,CACF,QAAA,MAAM,sCAAuCA,CAAC,CAAA,QACtD,CACA,KAAK,UAAY,EACnB,CACF,EAEA,MAAM,QAAQC,EAAqB,CACjC,MAAMJ,EAAM,MAAMC,EAAM,KAAKC,EAAI,MAAA,EAASE,CAAI,EACzC,KAAA,MAAM,QAAQJ,EAAI,IAAI,CAC7B,EAEA,MAAM,WAAWK,EAAYD,EAAqB,CAC1C,MAAAJ,EAAM,MAAMC,EAAM,IAAIC,EAAI,KAAKG,CAAE,EAAGD,CAAI,EACxCE,EAAQ,KAAK,MAAM,UAAWC,GAAMA,EAAE,KAAOF,CAAE,EACjDC,IAAU,IAAS,KAAA,MAAM,OAAOA,EAAO,EAAGN,EAAI,IAAI,CACxD,EAEA,MAAM,WAAWK,EAAY,CAC3B,MAAMJ,EAAM,OAAOC,EAAI,KAAKG,CAAE,CAAC,EAC1B,KAAA,MAAQ,KAAK,MAAM,OAAQE,GAAMA,EAAE,KAAOF,CAAE,CACnD,CACF,CACF,CAAC,iMClCD,MAAMG,EAAQV,yTCbDW,EAAe,CAC1B,wBAAyB,OACzB,0BAA2B,MAC7B,gzBC6DA,MAAMD,EAAQV,IAER,CAAE,KAAAY,GAASC,IAEXC,EAAeC,EAAS,IAAOL,EAAM,aAAe,2BAA6B,2BAA4B,EAE7GM,EAAQD,EAAS,IACjBL,EAAM,aACD,CACL,MAAO,SACP,OAAQ,cACR,QACE,sHAAA,EAGG,CACL,MAAO,UACP,OAAQ,aACR,QACE,kIAAA,CAGP,EAEKO,EAAY,IAAM,CACtBP,EAAM,UAAU,EAChBE,EAAK,CAAE,QAASE,EAAa,MAAO,MAAO,UAAW,CAAA,EAGlDI,EAAQC,4mDClEd,MAAMT,EAAQV,IAER,CAAE,KAAAY,GAASC,IAEXK,EAAQC,EAERC,EAAOC,EAAYX,EAAM,QAAQ,EAEjCY,EAAS,IAAM,CACnB,GAAI,CAACF,EAAK,OAASA,EAAK,QAAUV,EAAM,SACtC,OAAOQ,EAAM,QAAQ,EAGjBR,EAAA,eAAeU,EAAK,KAAK,EAC/BR,EAAK,CAAE,QAAS,wCAAyC,MAAO,SAAW,CAAA,EAC3EM,EAAM,QAAQ,CAAA,wpCCuBhB,MAAMK,EAAcF,IACdG,EAAcH,IACdI,EAAoBJ,IAEpB,CAAE,SAAAK,CAAA,EAAaC,EAAQ,MAAM,EAC7B,CAAE,KAAAf,GAASC,IAEXK,EAAQC,EAERG,EAAS,IAAM,CACfI,MACFd,EAAK,CAAE,QAAS,4CAA6C,MAAO,SAAW,CAAA,EAC/EM,EAAM,QAAQ,EAChB,EAGIU,EAAmB,CAAEC,GAAc,CAAC,CAACA,GAAK,gCAAgC,EAE1EC,EAAmB,CACtBD,GAAc,CAAC,CAACA,GAAK,iCACrBA,IAAcA,GAAA,YAAAA,EAAG,SAAU,GAAK,qCAChCA,GAAc,IAAI,IAAIA,CAAC,EAAE,MAAQ,GAAK,4CACtCA,GAAcA,IAAMN,EAAY,OAAS,iCAAA,EAGtCQ,EAAyB,CAC5BF,GAAc,CAAC,CAACA,GAAK,wCACrBA,GAAcA,IAAML,EAAY,OAAS,8CAAA,2+DCvEtC,MAAAQ,EAAsBX,EAAI,EAAK,EAC/BY,EAA2BZ,EAAI,EAAK"}